{
    "collab_server" : "",
    "contents" : "---\ntitle: \"607_01_Week3_Assignment_Regular_Expressions\"\nauthor: \"Shyam BV\"\ndate: \"September 13, 2016\"\noutput: html_document\n---\n\n3. Construct a logical vector indicating whether a character has a second name.\n\n```{r load-data,eval=TRUE}\nraw.data <- \"555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5543642Dr. Julius Hibbert\"\n\nrequire(stringr)\nname <- unlist(str_extract_all(raw.data, \"[[:alpha:]., ]{3,}\"))\nname\nname_test <- name\n\n\n#Store and show only the correct names in a vector\n\ncorrect_names <- unlist(str_extract_all(name_test,\"[A-Z][a-z]+\\\\.? [A-Z][a-z]+( [A-Z][a-z]+)?\"))\n\n#Store the incorrect names in a vector\n\nlastname <- unlist(str_extract_all(name_test,\"(.+), .+\"))\n\n#Store the correct firstnames in another vector\n\nfirstlastname_1 <-  unlist(str_extract_all(lastname,\"(, .+)\"))\n\n#Store the correct lastnames in another vector\n\nlastname_1 <- unlist(str_extract_all(lastname,\"[A-Z](.+),\"))\n\n#Create a dataframe by combining firstname and lastname\n\nfinal_fullname <- data.frame(firstlastname_1,lastname_1,fullname = paste0(firstlastname_1,' ' ,lastname_1) )\n\n#Replace the Comma(,) and string pattern\n\nfinal_fullname$fullname <- str_replace(final_fullname$fullname, pattern = \"((, )|,)?,\", replacement = \"\")\n\n#Replace the Comma(,) and string pattern\n\nfinal_fullname$fullname <- str_replace(final_fullname$fullname, pattern = \",\", replacement = \"\")\n\n#Final vector with corrected string\n\ncorrectednames <-   c(correct_names,final_fullname$fullname)\n\n#Remove the unwanted vector\n\nremove(firstlastname_1,lastname,lastname_1,name_test,final_fullname)\n\n#Final vector with corrected names\ncorrectednames\n```\n\n** 4.Describe the types of strings that conform to thc following regular expressions and construct an example that is matched by the regular expression.**\n\n\n```{r excercise4,eval=TRUE}\n#1. [0-9]+\\\\$\n\nstr_extract_all(\"7340$\",\"[0-9]+\\\\$\")\n \n#2. \\\\b[a-z]{1,4}\\\\b\n\nstr_extract_all(\" shya \",\"\\\\b[a-z]{1,4}\\\\b\")\n \n#3. .*?\\\\.txt$\n\nstr_extract_all(\"shyam.txt\", \".*?\\\\.txt$\")\n\n#4. \\\\d{2}/\\\\d{2}/\\\\d{4}\n\n\nstr_extract_all(\"73/40/7340\", \"\\\\d{2}/\\\\d{2}/\\\\d{4}\")\n\n#5. <(.+?)>.+?</\\\\1>\n\nstr_extract_all(\"<HTML>h</HTML>\", \"<(.+?)>.+?</\\\\1>\")\n\n\n```\n",
    "created" : 1473776967057.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "637619099",
    "id" : "5A2C0A06",
    "lastKnownWriteTime" : 1474073144,
    "last_content_update" : 1474073144900,
    "path" : "C:/CUNY/Courses/607/Week3_Sep_12th/607_01_Week3_Assignment_Regular_Expressions.Rmd",
    "project_path" : "607_01_Week3_Assignment_Regular_Expressions.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}