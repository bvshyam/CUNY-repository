{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Week3_Project1_Chess\"\nauthor: \"Shyam BV\"\ndate: \"September 17, 2016\"\noutput: html_document\n---\n\n```\n\nIn this project, you’re given a text file with chess tournament results where the information has some structure. Your\njob is to create an R Markdown file that generates a .CSV file (that could for example be imported into a SQL database)\nwith the following information for all of the players:\n\nPlayer’s Name, Player’s State, Total Number of Points, Player’s Pre-Rating, and Average Pre Chess Rating of Opponents\nFor the first player, the information would be:\n\nGary Hua, ON, 6.0, 1794, 1605\n\n1605 was calculated by using the pre-tournament opponents’ ratings of 1436, 1563, 1600, 1610, 1649, 1663, 1716, and\ndividing by the total number of games played.\n\nIf you have questions about the meaning of the data or the results, please post them on the discussion forum. Data\nscience, like chess, is a game of back and forth…\n\nThe chess rating system (invented by a Minnesota statistician named Arpad Elo) has been used in many other contexts,\nincluding assessing relative strength of employment candidates by human resource departments.\n\n\n```\n\n\n**Import necessary Library**\n\n```{r libary-load}\nlibrary(stringr)\n\n```\n\n\n**Load the text file data into a dataframe and combine the columns**\n\n```{r complete-data,eval=TRUE}\n\nchess_data <- read.table(\"C:/CUNY/Courses/CUNY-repository/607/Project1/Data/tournamentinfo.txt\",header=FALSE,sep = \"\\t\",stringsAsFactors = FALSE)\n\n\ncombined_data <- paste (chess_data[seq(5,196,3),], chess_data[seq(6,196,3),1],sep = \"\")\n\n```\n\n\n**Fetch the location of | and split the data into list. Convert that list to dataframe**\n\n```{r location,eval=TRUE}\n\nstr_location <- str_locate_all(combined_data,\"\\\\|\")\n\n\n# create a list and its size\n\ndatalist <- vector(\"list\",NROW(combined_data))\n\n#Loop through the datalist for all the rows trim the spaces\n\nfor(i in 1:NROW(combined_data)) {\n\nfor(j in 1:20) {\n\ndatalist[[i]][j] <- str_trim(substr(combined_data[i],str_location[[i]][j],str_location[[i]][j+1]),\"both\")\n\n}\n}\n\n# convert list to dataframe\n\n\ncsvdf <- do.call(rbind.data.frame, datalist)\n\n#Set temp names for the dataframe\n\ncsvdf <- setNames(csvdf,c(1:20))\n\n\n```\n\n**Replace all the | using regular expression with help of spply**\n\n\n```{r cleandata,eval=TRUE}\n\n\n#Dataframe without | and it has \n\nwithout_symbols_df <- data.frame(sapply(csvdf,function(x){\n  x <- str_replace(x,\"\\\\|\\\\s?\", \"\")\n  x <- str_replace(x,\"\\\\s+?\\\\|\", \"\")\n  x <- str_replace(x,\"\\\\|\", \"\")\n  x <- str_trim(x,\"both\")\n  return(x)\n}))\n\n#Convert the full dataset dataframe to the required columns dataframe \n\navg_df <- data.frame(without_symbols_df$X1,without_symbols_df$X2,str_extract(without_symbols_df$X3,\"\\\\d+\"),str_extract(without_symbols_df$X4,\"\\\\d+\"),str_extract(without_symbols_df$X5,\"\\\\d+\"),str_extract(without_symbols_df$X6,\"\\\\d+\"),str_extract(without_symbols_df$X7,\"\\\\d+\"),str_extract(without_symbols_df$X8,\"\\\\d+\"),str_extract(without_symbols_df$X9,\"\\\\d+\"),str_replace_all(trimws(substr(without_symbols_df$X11,15,19)),\"P\",\"\"),0,stringsAsFactors=FALSE)\n\n#Set correct names for all the fields\n\navg_df <- setNames(avg_df,c(\"Player\",\"Points\",\"Play1\",\"Play2\",\"Play3\",\"Play4\",\"Play5\",\"Play6\",\"Play7\",\"Previous_points\",\"Sum\"))\n\n\n#Set 0 for all the NA\n\navg_df[is.na(avg_df)] <- 0\n\n```\n\n\n**Finding average by replacing all the previous player scores**\n\n```{r findavg,eval=TRUE}\n\n\n#Replace the the oppenent number with their previous score\n\ni <- 0\nj <- 0\navg_df1 <- avg_df\nfor(i in 1:nrow(avg_df1)) {\n  for(j in 3:9) {\n\navg_df1[i,j] <- avg_df1[avg_df1[i,j],10]\n\n}\n}\n\n\n#Set 0 for all NA\n\n\navg_df1[is.na(avg_df1)] <- 0\n\n#Convert Char columns to numeric\n\n\ncolumns <- c(3:10)\navg_df1[,columns] <- apply(avg_df1[,columns],2,function(x){ as.numeric(as.character(x))})\n\navg_df1[is.na(avg_df1)] <- 0\n\n\n\n#Finally find out the average\n\navg_df1$Sum  <- rowMeans(avg_df1[,3:9],1)\n\n#Remove unwanted fields\n\nremove(chess_data,csvdf,without_symbols_df,columns,combined_data,datalist,i,j,str_location,avg_df)\n\nhead(avg_df1)\n \n```\n\n",
    "created" : 1474132458319.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1303086350",
    "id" : "FE39F3FA",
    "lastKnownWriteTime" : 1474413017,
    "last_content_update" : 1474420540542,
    "path" : "C:/CUNY/Courses/CUNY-repository/607/Project1/Project1_chess.Rmd",
    "project_path" : "Project1_chess.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}