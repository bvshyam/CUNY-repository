library("DBI")
con <- dbConnect(RMySQL:MySQL,"root","admin")
con
con <- dbConnect(RMySQL:MySQL,dbname="tb","root","admin")
con
con <- dbConnect(RMySQL:MySQL,dbname="tb",user="root",password="admin")
con
con <- dbConnect(RMySQL:MySQL,dbname="tb",user="root",password="admin")
con
con <- dbConnect(RMySQL::MySQL,dbname="tb",user="root",password="admin")
con
con <- dbConnect(RMySQL::MySQL(),dbname="tb",user="root",password="admin")
con
con <- dbConnect(RMySQL::MySQL(),dbname="tb",user="root",password="admin")
con
con.disconnect()
con <- dbConnect(RMySQL::MySQL(),dbname="tb",user="root",password="admin")
con
dbDisconnect(con)
tb_data <- dbGetQuery(con,"Select * from tb")
con <- dbConnect(RMySQL::MySQL(),dbname="tb",user="root",password="admin")
con
tb_data <- dbGetQuery(con,"Select * from tb")
tb_data <- dbGetQuery(con,"Select * from tb")
tb_data1 <- dbGetQuery(con,"Select * from tb")
tb_data <- dbGetQuery(con,"Select * from tb")
head(tb_data)
con_movies <- dbConnect(RMySQL::MySQL(),dbname="movies",user="root",password="admin")
con_movies
dbDisconnect(con)
remove(list=c("moviewreviews"))
remove(list=c("moviereviews"))
remove(list=c("moviereview"))
moviereviews <- dbGetQuery(con_movies,"select * from movies")
head(moviereview)
con_movies <- dbConnect(RMySQL::MySQL(),dbname="movies",user="root",password="admin")
con_movies
moviereviews <- dbGetQuery(con_movies,"select * from movies")
head(moviereview)
moviereviews <- dbGetQuery(con_movies,"select * from movies")
head(moviereviews)
moviereviews <- dbGetQuery(con_movies,"select * from movies")
head(moviereviews)
moviereviews <- dbGetQuery(con_movies,"select * from movies")
con_movies <- dbConnect(RMySQL::MySQL(),dbname="movies",user="root",password="admin")
con_movies
moviereviews <- dbGetQuery(con_movies,"select * from movies")
moviereviews <- dbGetQuery(con_movies,"select * from reviews")
head(moviereviews)
separate(moviereviews, Title, c("Title","Year"))
install.packages("tidyr")
library("tidyr")
separate(moviereviews, Title, c("Title","Year"))
moviereviews <- dbGetQuery(con_movies,"select * from reviews")
head(moviereviews)
separate(moviereviews, Title, c("Title","Year"),sep="(")
separate(moviereviews, Title, c("Title","Year"),sep="(")
separate(moviereviews, Title, c("Title","Year"),sep=" ")
moviereviews <- dbGetQuery(con_movies,"select * from reviews")
head(moviereviews)
separate(moviereviews, Title, c("Title","Year"),sep=" (")
separate(moviereviews, Title, c("Title","Year"),sep="\\(")
gsub("\\)","",moviereviews$Year)
head(moviereviews)
moviereviews_year <- separate(moviereviews, Title, c("Title","Year"),sep="\\(")
gsub("\\)","",moviereviews_year$Year)
head(moviereviews)
head(moviereviews_year)
gsub("\\)"," ",moviereviews_year$Year)
moviereviews_year <- separate(moviereviews, Title, c("Title","Year"),sep="\\(")
moviereviews_year$Year <- gsub("\\)"," ",moviereviews_year$Year)
head(moviereviews_year)
str(moviereviews_year)
moviereviews_year$Year <- gsub("\\) "," ",moviereviews_year$Year)
head(moviereviews_year)
str(moviereviews_year)
moviereviews_year <- separate(moviereviews, Title, c("Title","Year"),sep="\\(")
moviereviews_year$Year <- gsub("\\) ","",moviereviews_year$Year)
head(moviereviews_year)
moviereviews_year <- separate(moviereviews, Title, c("Title","Year"),sep="\\(")
moviereviews_year$Year <- gsub("\\)","",moviereviews_year$Year)
head(moviereviews_year)
str(moviereviews_year)
table(moviereviews_year)
table(moviereviews_year$Title,moviereviews_year$Year)
table(moviereviews_year$Year)
nrow(moviereviews_year)
View(moviereviews_year)
View(moviereviews_year)
moviereviews_year$Votes
table(moviereviews_year$Year,moviereviews_year$Votes)
table(moviereviews_year$Votes)
aggregate(moviereviews_year$Votes,by=list(Category=moviereviews_year$Year),FUN=sum)
moviereviews_year$Votes/sum(moviereviews_year$Votes)
head(moviereviews_year)
moviereviews_year$Votes/7393
hist(moviereviews_year)
aggregate(moviereviews_year$Votes,by=list(Category=moviereviews_year$Year),FUN=sum)
moviereviews_consolidate <- aggregate(moviereviews_year$Votes,by=list(Category=moviereviews_year$Year),FUN=sum)
View(moviereviews_year)
View(moviereviews_consolidate)
hist(moviereviews_consolidate$x)
plot(moviereviews_consolidate$Category,moviereviews_consolidate$x)
plot(moviereviews_consolidate$Category,moviereviews_consolidate$x, xlib="Year")
plot(moviereviews_consolidate$Category,moviereviews_consolidate$x, xlab="Year",ylab = "Votes Received")
plot(moviereviews_consolidate$Category,moviereviews_consolidate$x, xlab="Year",ylab = "Votes Received")
warning()
plot(moviereviews_consolidate$Category,moviereviews_consolidate$x, xlab="Year",ylab = "Votes Received")
warnings()
plot(moviereviews_consolidate$Category,moviereviews_consolidate$x, xlab="Year",ylab = "Votes Received")
plot(moviereviews_consolidate$Category,moviereviews_consolidate$x, xlab="Year",ylab = "Votes Received",main="Votes received per year")
moviereviews_year[,moviereviews_year$Rank]
moviereviews_year[,2]
aggregate(moviereviews_year[,2],list(moviereviews_year$Year),mean)
moviereviews_consolidate <- aggregate(moviereviews_year$Votes,by=list(Category=moviereviews_year$Year),FUN=mean)
moviereviews_consolidate <- aggregate(moviereviews_year$Votes,by=list(Category=moviereviews_year$Year),FUN=mean)
moviereviews_consolidate <- aggregate(moviereviews_year$Votes,by=list(Category=moviereviews_year$Year),FUN=sum)
plot(moviereviews_consolidate$Category,moviereviews_consolidate$x, xlab="Year",ylab = "Votes Received",main="Votes received per year")
summary(tb_data)
summary(moviereviews)
table(moviereviews_year$Year)
library(ggplot2)
movie.m <- melt(moviereviews_year)
library("ggplot2")
plot(moviereviews_consolidate$Category,moviereviews_consolidate$x, xlab="Year",ylab = "Votes Received",main="Votes received per year")
movie.m <- melt(moviereviews_year)
movie.m <- melt(moviereviews_consolidate)
library(reshape)
movie.m <- melt(moviereviews_year)
install.packages("reshape")
library(reshape)
movie.m <- melt(moviereviews_year)
movie.m <- melt(moviereviews_year, id=c("Title","Year"))
p <- ggplot(movie.m , aes(Title, Year)) + geom_tile(aes(fill = rescale),
+     colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue"))
+     high = "steelblue"))
p <- ggplot(movie.m , aes(Title, Year)) + geom_tile(aes(fill = rescale), + colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue")
p <- ggplot(movie.m , aes(Title, Year)) + geom_tile(aes(fill = rescale), + colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue"))
p <- ggplot(movie.m , aes(Title, Year)) + geom_tile(aes(fill = rescale)))
p <- ggplot(movie.m, aes(Title, Year)) + geom_tile(aes(fill = rescale)))
p <- ggplot(movie.m, aes(Title, Year)) + geom_tile(aes(fill = rescale))
movie.m <- melt(moviereviews_year, id=c("Title","Year"))
p <- ggplot(movie.m, aes(Title, Year)) + geom_tile(aes(fill = rescale))
p
ggplot(movie.m, aes(Title, Year)) + geom_tile(aes(fill = rescale))
library(scales)
movie.m <- melt(moviereviews_year, id=c("Title","Year"))
p <- ggplot(movie.m, aes(Title, Year)) + geom_tile(aes(fill = rescale))
p
p <- ggplot(movie.m , aes(Title, Year)) + geom_tile(aes(fill = rescale), + colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue")
p <- ggplot(movie.m , aes(Title, Year)) + geom_tile(aes(fill = rescale), + colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue"))
p <- ggplot(movie.m, aes(Title, Year)) + geom_tile(aes(fill = rescale))
p
p <- ggplot(movie.m, aes(Title)) + geom_tile(aes(fill = rescale))
p
library(scales)
movie.m <- melt(moviereviews_year, id=c("Title"))
p <- ggplot(movie.m, aes(Title)) + geom_tile(aes(fill = rescale))
p
library(scales)
movie.m <- melt(moviereviews_year, id=c("Title"))
p <- ggplot(movie.m, aes(Title)) + geom_tile(aes(fill = rescale))
p
<- melt(moviereviews_year, id=c("Title","Year"))
movie.m <- melt(moviereviews_year, id=c("Title","Year"))
movie.m
movie.mnew <- subset(movie.m,variable="Votes")
movie.mnew
movie.mnew
movie.mnew <- subset(movie.m,variable=="Votes")
movie.mnew
p <- ggplot(movie.m, aes(Title)) + geom_tile(aes(fill = rescale))
p
p <- ggplot(movie.m, aes(Title)) + geom_tile(aes(fill = rescale))
p
p <- ggplot(movie.mnew, aes(Title)) + geom_tile(aes(fill = rescale))
p
p <- ggplot(movie.mnew , aes(Title, Year)) + geom_tile(aes(fill = rescale), + colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue")
p <- ggplot(movie.mnew , aes(Title, Year)) + geom_tile(aes(fill = rescale), + colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue"))
p <- ggplot(movie.mnew , aes(Title, Year)) + geom_tile(aes(fill = rescale), + colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue")
p <- ggplot(movie.mnew , aes(Title, Year)) + geom_tile(aes(fill = rescale), + colour = "white")
p <- ggplot(movie.mnew, aes(Title)) + geom_tile(aes(fill = rescale))
p <- ggplot(movie.mnew, aes(Title)) + geom_tile(aes(fill = rescale))
p
ggplot(movie.mnew, aes(Title)) + geom_tile(aes(fill = rescale))
ggplot(movie.mnew, aes(Title,Year)) + geom_tile(aes(fill = rescale))
ggplot(movie.mnew, aes(Title,Votes)) + geom_point()
ggplot(moviereviews_year, aes(Title,Votes)) + geom_point()
ggplot(moviereviews_year, aes(Rank,Votes)) + geom_point()
ggplot(moviereviews_year, aes(Rank,Votes)) + geom_point()
ggplot(moviereviews_year, aes(Rank,Votes)) + geom_point()
p <- ggplot(movie.m , aes(Title, Year)) + geom_tile(aes(fill = rescale), + colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue")
p <- ggplot(nba.m, aes(variable, Name)) + geom_tile(aes(fill = rescale),
+     colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue"))
p <- ggplot(movie.m , aes(Title, Year)) + geom_tile(aes(fill = rescale), + colour = "white") + scale_fill_gradient(low = "white",
+     high = "steelblue")
ggplot(moviereviews_year, aes(Year,Votes)) + geom_point()
ggplot(moviereviews_year, aes(Year,Votes))
ggplot(moviereviews_year, aes(Year,Votes)) + geom_point()
plot(moviereviews_consolidate$Category,moviereviews_consolidate$x, xlab="Year", ylab = "Votes Received",main="Votes received per year")
ggplot(moviereviews_year, aes(Year,Votes)) + geom_point()
ggplot(moviereviews_year, aes(moviereviews_consolidate$Category,moviereviews_consolidate$x)) + geom_point()
ggplot(moviereviews_consolidate, aes(Category,x)) + geom_point()
table(moviereviews_year$Year)
plot(moviereviews_consolidate$Category,moviereviews_consolidate$x, xlab="Year", ylab = "Votes Received",main="Votes received per year")
startLab('Lab2')
library('IS606')
startLab('Lab2')
getLabs()
viewLab('Lab2')
startLab('Lab2')
startLab('Lab2')
cd C:\CUNY\Courses\606\Week2-09_Sep_2016
setwd("C:/CUNY/Courses/606/Week2-09_Sep_2016")
startLab('Lab2')
setwd("C:/CUNY/Courses/606/Week2-09_Sep_2016/Lab2")
load("/more/kobe.RData")
load("more/kobe.RData")
View(kobe)
kobe$basket[1:9]
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
View(calc_streak)
function(x){
y <- rep(0,length(x))
y[x == "H"] <- 1
y <- c(0, y, 0)
wz <- which(y == 0)
streak <- diff(wz) - 1
return(streak)
}
x
y <- rep(0,length(x))
rep(0,length(kobe$basket))
length(kobe$basket)
rep(1,10)
y <- rep(0,length(x))
x <- rep(0,length(kobe$basket))
y[x == "H"] <- 1
y <- rep(0,length(kobe$basket))
x <- kobe$basket
y[x == "H"] <- 1
y <- c(0, y, 0)
wz <- which(y == 0)
wz
which(y == 0)
streak <- diff(wz) - 1
streak
diff(wz)
diff(wz) - 1
y <- rep(0,length(kobe$basket))
rep(0,length(kobe$basket))
y[x == "H"] <- 1
y <- c(0, y, 0)
which(y == 0)
diff(wz)
diff(wz) - 1
y <- rep(0,length(kobe$basket))
y[x == "H"] <- 1
y
wz <- which(y == 0)
streak <- diff(wz) - 1
streak
y <- rep(0,length(kobe$basket))
y[x == "H"] <- 1
y
y <- c(0, y, 0)
wz <- which(y == 0)
streak <- diff(wz) - 1
streak
diff(wz) - 1
y <- c(0, y, 0)
y
wz <- which(y == 0)
which(y == 0)
diff(wz) - 1
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = FALSE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = FALSE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = FALSE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = FALSE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = FALSE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 1, replace = FALSE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 0, replace = FALSE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 2, replace = FALSE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 2, replace = FALSE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 2, replace = FALSE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 21, replace = FALSE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 3, replace = FALSE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 3, replace = TRUE)
outcomes <- c("heads", "tails")
sample(outcomes, size = 33, replace = TRUE)
sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)
sim_fair_coin
table(sim_fair_coin)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sample(outcomes, size = 100, replace = TRUE, prob = c(0.01, 0.8))
sample(outcomes, size = 100, replace = TRUE, prob = c(0.01, 0.8,0.9))
sample(outcomes, size = 100, replace = TRUE, prob = c(0.01, 0.8,0.1))
sample(outcomes, size = 100, replace = TRUE, prob = c(0.01, 0.8))
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
sim_basket
kobe_streak <- calc_streak(kobe$basket)
mean(kobe_streak)
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sim_unfair_coin
sum(sim_unfair_coin ="heads")
sum(sim_unfair_coin =="heads")
sum(sim_unfair_coin =="tails")
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sum(sim_unfair_coin =="tails")
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sum(sim_unfair_coin =="heads")
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sum(sim_unfair_coin =="heads")
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sum(sim_unfair_coin =="heads")
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sum(sim_unfair_coin =="heads")
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sum(sim_unfair_coin =="heads")
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sum(sim_unfair_coin =="heads")
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sum(sim_unfair_coin =="heads")
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sum(sim_unfair_coin =="heads")
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sum(sim_unfair_coin =="heads")
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sum(sim_unfair_coin =="heads")
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sum(sim_unfair_coin =="heads")
outcomes <- c("heads", "tails")
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
sum(sim_unfair_coin =="heads")
shooting_outcomes <- c("H","M")
sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,55))
head(sim_basket)
shooting_outcomes <- c("H","M")
sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,55))
sim_basket
sum(sim_basket ="H")
sum(sim_basket =="H")
sum(sim_basket =="H")
shooting_outcomes <- c("H","M")
sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))
sum(sim_basket =="H")
shooting_outcomes <- c("H","M")
sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))
sum(sim_basket =="H")
shooting_outcomes <- c("H","M")
sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))
sum(sim_basket =="H")
shooting_outcomes <- c("H","M")
sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))
sum(sim_basket =="H")
shooting_outcomes <- c("H","M")
sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))
sum(sim_basket =="H")
shooting_outcomes <- c("H","M")
sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))
sum(sim_basket =="H")
shooting_outcomes <- c("H","M")
sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))
sum(sim_basket =="H")
shooting_outcomes <- c("H","M")
sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))
sum(sim_basket =="H")
kobe$basket
sim_basket
sim_streak <- calc_streak(sim_basket)
sim_streak
barplot(sim_streak)
barplot(table(sim_streak))
kobe_streak <- calc_streak(kobe$basket)
hist(kobe_streak)
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
mean(kobe_streak)
barplot(table(sim_streak))
mean(sim_streak)
sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))
sum(sim_basket =="H")
sim_streak <- calc_streak(sim_basket)
barplot(table(sim_streak))
mean(sim_streak)
sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))
sum(sim_basket =="H")
sim_streak <- calc_streak(sim_basket)
barplot(table(sim_streak))
mean(sim_streak)
barplot(table(sim_streak))
barplot(table(sim_streak))
barplot(table(kobe_streak))
barplot(table(kobe_streak))
barplot(table(sim_streak))
library("ggplot2")
library("reshape2")
comparision <- data.frame(table(kobe_streak),table(sim_streak))
comparision
comparision.df <- melt(comparison, id=c("comparison$sim_streak"))
comparision.df <- melt(comparison, id=c("comparision$sim_streak"))
comparision.df <- melt(comparison, id=c(comparision$sim_streak))
comparision.df <- melt(comparision, id=c(comparision$sim_streak))
comparision.df <- melt(comparision, id=c("comparision$sim_streak""))
comparision.df <- melt(comparision, id=c("comparision$sim_streak"))
comparision.df <- melt(comparision, id=c("comparision$sim_streak"))
comparision.df <- melt(comparision, id=c("sim_streak"))
comparision.df
comparision <- data.frame(table(kobe_streak),table(sim_streak))
comparision
barplot(table(kobe_streak),table(sim_streak))
barplot(table(kobe_streak))
barplot(table(sim_streak))
table(sim_streak)
y <- rep(0,length(x))
sample(flip-coin,size=10,replace=TRUE)
sample(flip-coin, size=10,replace=TRUE)
flip_coin <- c("H","T")
sample(flip_coin, size=10,replace=TRUE)
flip_coin <- c("H","T")
sample(flip_coin, size=10,replace=TRUE)
sample(flip_coin, size=10,rep=T)
sample(flip_coin, size=10,rep=F)
sample(0:1, size=10,replace=TRUE)
0.5^10
1-0.0009765625
sample(2:12,1,rep=F)
sample(2:12,1,rep=F)
```
sample(2:12,1,rep=T)
dice <- c(2:12)
c(2:12)
4/36
true <- c(1,2,3,4,5,6,5,4,3,2,1)/36
true
1/6
c(1,2,3,4,5,6,5,4,3,2,1)
c(1)/2
c(1,1)/2
35+23+11
100-35+23+11
100-(35+23+11)
install.packages("venndiagram")
Yes
install.packages("VennDiagram")
library("VennDiagram")
install.packages("grid")
install.packages("futile.logger")
install.packages("grid")
install.packages("futile.logger")
install.packages("grid")
install.packages("grid")
install.packages("futile.logger")
