{
    "data" : [
        "\nR version 3.3.1 (2016-06-21) -- \"Bug in Your Hair\"\nCopyright (C) 2016 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "[Workspace loaded from C:/CUNY/Courses/606/Week2-09_Sep_2016/Lab2/.RData]\n\n",
        "> ",
        "load(\"/more/kobe.RData\")",
        "Error in readChar(con, 5L, useBytes = TRUE) : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In readChar(con, 5L, useBytes = TRUE) :",
        "\n ",
        " cannot open compressed file '/more/kobe.RData', probable reason 'No such file or directory'\n",
        "> ",
        "load(\"more/kobe.RData\")",
        "> ",
        "View(kobe)",
        "> ",
        "kobe$basket[1:9]",
        "[1] \"H\" \"M\" \"M\" \"H\" \"H\" \"M\" \"M\" \"M\" \"M\"\n",
        "> ",
        "kobe_streak <- calc_streak(kobe$basket)",
        "> ",
        "barplot(table(kobe_streak))",
        "> ",
        "View(calc_streak)",
        "> ",
        "function(x){",
        "+ ",
        "  y <- rep(0,length(x))",
        "+ ",
        "  y[x == \"H\"] <- 1",
        "+ ",
        "  y <- c(0, y, 0)",
        "+ ",
        "  wz <- which(y == 0)",
        "+ ",
        "  streak <- diff(wz) - 1",
        "+ ",
        "  return(streak)",
        "+ ",
        "}",
        "function(x){\n  y <- rep(0,length(x))\n  y[x == \"H\"] <- 1\n  y <- c(0, y, 0)\n  wz <- which(y == 0)\n  streak <- diff(wz) - 1\n  return(streak)\n}\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "x",
        "Error: object 'x' not found\n",
        "> ",
        "y <- rep(0,length(x))",
        "Error: object 'x' not found\n",
        "> ",
        "rep(0,length(kobe$basket))",
        "  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [50] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [99] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n",
        "> ",
        "length(kobe$basket)",
        "[1] 133\n",
        "> ",
        "rep(1,10)",
        " [1] 1 1 1 1 1 1 1 1 1 1\n",
        "> ",
        "y <- rep(0,length(x))",
        "Error: object 'x' not found\n",
        "> ",
        "x <- rep(0,length(kobe$basket))",
        "> ",
        "y[x == \"H\"] <- 1",
        "Error in y[x == \"H\"] <- 1 : object 'y' not found\n",
        "> ",
        "y <- rep(0,length(kobe$basket))",
        "> ",
        "x <- kobe$basket",
        "> ",
        "y[x == \"H\"] <- 1",
        "> ",
        "y <- c(0, y, 0)",
        "> ",
        "wz <- which(y == 0)",
        "> ",
        "wz",
        " [1]   1   3   4   7   8   9  10  14  17  18  22  23  25  29  30  31  32  33  34  36  38  39  44  46  47\n[26]  49  50  52  53  55  58  59  61  64  66  67  68  70  71  72  73  75  77  78  80  81  84  85  86  87\n[51]  91  92  94  95  97 100 102 103 105 106 107 109 113 117 119 121 122 123 124 125 126 128 130 131 132\n[76] 133 135\n",
        "> ",
        "which(y == 0)",
        " [1]   1   3   4   7   8   9  10  14  17  18  22  23  25  29  30  31  32  33  34  36  38  39  44  46  47\n[26]  49  50  52  53  55  58  59  61  64  66  67  68  70  71  72  73  75  77  78  80  81  84  85  86  87\n[51]  91  92  94  95  97 100 102 103 105 106 107 109 113 117 119 121 122 123 124 125 126 128 130 131 132\n[76] 133 135\n",
        "> ",
        "streak <- diff(wz) - 1",
        "> ",
        "streak",
        " [1] 1 0 2 0 0 0 3 2 0 3 0 1 3 0 0 0 0 0 1 1 0 4 1 0 1 0 1 0 1 2 0 1 2 1 0 0 1 0 0 0 1 1 0 1 0 2 0 0 0 3\n[51] 0 1 0 1 2 1 0 1 0 0 1 3 3 1 1 0 0 0 0 0 1 1 0 0 0 1\n",
        "> ",
        "diff(wz)",
        " [1] 2 1 3 1 1 1 4 3 1 4 1 2 4 1 1 1 1 1 2 2 1 5 2 1 2 1 2 1 2 3 1 2 3 2 1 1 2 1 1 1 2 2 1 2 1\n[46] 3 1 1 1 4 1 2 1 2 3 2 1 2 1 1 2 4 4 2 2 1 1 1 1 1 2 2 1 1 1 2\n",
        "> ",
        "diff(wz) - 1",
        " [1] 1 0 2 0 0 0 3 2 0 3 0 1 3 0 0 0 0 0 1 1 0 4 1 0 1 0 1 0 1 2 0 1 2 1 0 0 1 0 0 0 1 1 0 1 0\n[46] 2 0 0 0 3 0 1 0 1 2 1 0 1 0 0 1 3 3 1 1 0 0 0 0 0 1 1 0 0 0 1\n",
        "> ",
        "y <- rep(0,length(kobe$basket))",
        "> ",
        "rep(0,length(kobe$basket))",
        "  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [38] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n [75] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n[112] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n",
        "> ",
        "y[x == \"H\"] <- 1",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "y <- c(0, y, 0)",
        "> ",
        "which(y == 0)",
        " [1]   1   3   4   7   8   9  10  14  17  18  22  23  25  29  30  31  32  33\n[19]  34  36  38  39  44  46  47  49  50  52  53  55  58  59  61  64  66  67\n[37]  68  70  71  72  73  75  77  78  80  81  84  85  86  87  91  92  94  95\n[55]  97 100 102 103 105 106 107 109 113 117 119 121 122 123 124 125 126 128\n[73] 130 131 132 133 135\n",
        "> ",
        "diff(wz)",
        " [1] 2 1 3 1 1 1 4 3 1 4 1 2 4 1 1 1 1 1 2 2 1 5 2 1 2 1 2 1 2 3 1 2 3 2 1 1 2\n[38] 1 1 1 2 2 1 2 1 3 1 1 1 4 1 2 1 2 3 2 1 2 1 1 2 4 4 2 2 1 1 1 1 1 2 2 1 1\n[75] 1 2\n",
        "> ",
        "diff(wz) - 1",
        " [1] 1 0 2 0 0 0 3 2 0 3 0 1 3 0 0 0 0 0 1 1 0 4 1 0 1 0 1 0 1 2 0 1 2 1 0 0 1\n[38] 0 0 0 1 1 0 1 0 2 0 0 0 3 0 1 0 1 2 1 0 1 0 0 1 3 3 1 1 0 0 0 0 0 1 1 0 0\n[75] 0 1\n",
        "> ",
        "y <- rep(0,length(kobe$basket))",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "  y[x == \"H\"] <- 1",
        "> ",
        "y",
        "  [1] 1 0 0 1 1 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 1 0 1 0\n [38] 0 1 1 1 1 0 1 0 0 1 0 0 1 0 0 1 0 1 1 0 0 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 0\n [75] 1 0 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 1 0 0 1 0 1 1 0 1 0 0 1 0 0 0 1 0 1 1 1\n[112] 0 1 1 1 0 1 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 1\n",
        "> ",
        "wz <- which(y == 0)",
        "> ",
        "streak <- diff(wz) - 1",
        "> ",
        "streak",
        " [1] 0 2 0 0 0 3 2 0 3 0 1 3 0 0 0 0 0 1 1 0 4 1 0 1 0 1 0 1 2 0 1 2 1 0 0 1 0\n[38] 0 0 1 1 0 1 0 2 0 0 0 3 0 1 0 1 2 1 0 1 0 0 1 3 3 1 1 0 0 0 0 0 1 1 0 0 0\n",
        "> ",
        "y <- rep(0,length(kobe$basket))",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "  y[x == \"H\"] <- 1",
        "> ",
        "y",
        "  [1] 1 0 0 1 1 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 1 0 1 0\n [38] 0 1 1 1 1 0 1 0 0 1 0 0 1 0 0 1 0 1 1 0 0 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 0\n [75] 1 0 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 1 0 0 1 0 1 1 0 1 0 0 1 0 0 0 1 0 1 1 1\n[112] 0 1 1 1 0 1 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 1\n",
        "> ",
        "    y <- c(0, y, 0)",
        "> ",
        "  wz <- which(y == 0)",
        "> ",
        "  streak <- diff(wz) - 1",
        "> ",
        "  streak",
        " [1] 1 0 2 0 0 0 3 2 0 3 0 1 3 0 0 0 0 0 1 1 0 4 1 0 1 0 1 0 1 2 0 1 2 1 0 0 1\n[38] 0 0 0 1 1 0 1 0 2 0 0 0 3 0 1 0 1 2 1 0 1 0 0 1 3 3 1 1 0 0 0 0 0 1 1 0 0\n[75] 0 1\n",
        "> ",
        "diff(wz) - 1",
        " [1] 1 0 2 0 0 0 3 2 0 3 0 1 3 0 0 0 0 0 1 1 0 4 1 0 1 0 1 0 1 2 0 1 2 1 0 0 1\n[38] 0 0 0 1 1 0 1 0 2 0 0 0 3 0 1 0 1 2 1 0 1 0 0 1 3 3 1 1 0 0 0 0 0 1 1 0 0\n[75] 0 1\n",
        "> ",
        "y <- c(0, y, 0)",
        "> ",
        "y",
        "  [1] 0 0 1 0 0 1 1 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 1 0\n [38] 1 0 0 1 1 1 1 0 1 0 0 1 0 0 1 0 0 1 0 1 1 0 0 1 0 1 1 0 1 0 0 0 1 0 0 0 0\n [75] 1 0 1 0 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 1 0 0 1 0 1 1 0 1 0 0 1 0 0 0 1 0 1\n[112] 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0\n",
        "> ",
        "wz <- which(y == 0)",
        "> ",
        "which(y == 0)",
        " [1]   1   2   4   5   8   9  10  11  15  18  19  23  24  26  30  31  32  33\n[19]  34  35  37  39  40  45  47  48  50  51  53  54  56  59  60  62  65  67\n[37]  68  69  71  72  73  74  76  78  79  81  82  85  86  87  88  92  93  95\n[55]  96  98 101 103 104 106 107 108 110 114 118 120 122 123 124 125 126 127\n[73] 129 131 132 133 134 136 137\n",
        "> ",
        "diff(wz) - 1",
        " [1] 0 1 0 2 0 0 0 3 2 0 3 0 1 3 0 0 0 0 0 1 1 0 4 1 0 1 0 1 0 1 2 0 1 2 1 0 0\n[38] 1 0 0 0 1 1 0 1 0 2 0 0 0 3 0 1 0 1 2 1 0 1 0 0 1 3 3 1 1 0 0 0 0 0 1 1 0\n[75] 0 0 1 0\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = TRUE)",
        "[1] \"heads\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = TRUE)",
        "[1] \"tails\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = TRUE)",
        "[1] \"heads\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = TRUE)",
        "[1] \"heads\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = TRUE)",
        "[1] \"tails\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = TRUE)",
        "[1] \"tails\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = TRUE)",
        "[1] \"heads\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = TRUE)",
        "[1] \"tails\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = TRUE)",
        "[1] \"heads\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = FALSE)",
        "[1] \"tails\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = FALSE)",
        "[1] \"heads\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = FALSE)",
        "[1] \"tails\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = FALSE)",
        "[1] \"tails\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = FALSE)",
        "[1] \"tails\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 1, replace = FALSE)",
        "[1] \"heads\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 0, replace = FALSE)",
        "character(0)\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 2, replace = FALSE)",
        "[1] \"tails\" \"heads\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 2, replace = FALSE)",
        "[1] \"heads\" \"tails\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 2, replace = FALSE)",
        "[1] \"heads\" \"tails\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 21, replace = FALSE)",
        "Error in sample.int(length(x), size, replace, prob) : \n  cannot take a sample larger than the population when 'replace = FALSE'\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 3, replace = FALSE)",
        "Error in sample.int(length(x), size, replace, prob) : \n  cannot take a sample larger than the population when 'replace = FALSE'\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 3, replace = TRUE)",
        "[1] \"tails\" \"tails\" \"heads\"\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "sample(outcomes, size = 33, replace = TRUE)",
        " [1] \"heads\" \"tails\" \"heads\" \"tails\" \"tails\" \"heads\" \"heads\" \"heads\" \"tails\"\n[10] \"heads\" \"tails\" \"tails\" \"tails\" \"heads\" \"tails\" \"heads\" \"heads\" \"tails\"\n[19] \"heads\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"heads\" \"heads\" \"tails\"\n[28] \"heads\" \"heads\" \"heads\" \"heads\" \"heads\" \"heads\"\n",
        "> ",
        "sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)",
        "> ",
        "sim_fair_coin",
        "  [1] \"heads\" \"heads\" \"tails\" \"heads\" \"tails\" \"heads\" \"tails\" \"heads\" \"heads\"\n [10] \"heads\" \"heads\" \"heads\" \"tails\" \"tails\" \"tails\" \"heads\" \"heads\" \"heads\"\n [19] \"heads\" \"tails\" \"heads\" \"heads\" \"tails\" \"tails\" \"heads\" \"tails\" \"tails\"\n [28] \"heads\" \"tails\" \"heads\" \"heads\" \"tails\" \"heads\" \"tails\" \"tails\" \"tails\"\n [37] \"heads\" \"heads\" \"heads\" \"heads\" \"tails\" \"heads\" \"heads\" \"heads\" \"heads\"\n [46] \"tails\" \"heads\" \"tails\" \"heads\" \"tails\" \"heads\" \"tails\" \"heads\" \"tails\"\n [55] \"heads\" \"heads\" \"tails\" \"tails\" \"tails\"",
        " \"heads\" \"heads\" \"tails\" \"heads\"\n [64] \"tails\" \"tails\" \"tails\" \"tails\" \"heads\" \"heads\" \"tails\" \"heads\" \"heads\"\n [73] \"heads\" \"tails\" \"heads\" \"heads\" \"heads\" \"heads\" \"tails\" \"tails\" \"tails\"\n [82] \"tails\" \"heads\" \"heads\" \"tails\" \"tails\" \"heads\" \"tails\" \"heads\" \"heads\"\n [91] \"tails\" \"tails\" \"heads\" \"heads\" \"heads\" \"heads\" \"heads\" \"heads\" \"heads\"\n[100] \"tails\"\n",
        "> ",
        "table(sim_fair_coin)",
        "sim_fair_coin\nheads tails \n   58    42 \n",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "  [1] \"tails\" \"tails\" \"heads\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"heads\"\n [10] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"heads\" \"tails\"\n [19] \"heads\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [28] \"tails\" \"tails\" \"tails\" \"heads\" \"tails\" \"tails\" \"heads\" \"tails\" \"heads\"\n [37] \"tails\" \"tails\" \"heads\" \"heads\" \"tails\" \"tails\" \"heads\" \"tails\" \"heads\"\n [46] \"tails\" \"heads\" \"tails\" \"tails\" \"tails\" \"heads\" \"tails\" \"tails\" \"tails\"\n [55] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"",
        " \"heads\" \"tails\" \"tails\" \"tails\"\n [64] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [73] \"tails\" \"heads\" \"tails\" \"tails\" \"tails\" \"heads\" \"tails\" \"heads\" \"heads\"\n [82] \"tails\" \"tails\" \"tails\" \"heads\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [91] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n[100] \"tails\"\n",
        "> ",
        "sample(outcomes, size = 100, replace = TRUE, prob = c(0.01, 0.8))",
        "  [1] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [10] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [19] \"heads\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [28] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [37] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [46] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [55] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"",
        " \"tails\" \"tails\" \"tails\" \"tails\"\n [64] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [73] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [82] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [91] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n[100] \"tails\"\n",
        "> ",
        "sample(outcomes, size = 100, replace = TRUE, prob = c(0.01, 0.8,0.9))",
        "Error in sample.int(length(x), size, replace, prob) : \n  incorrect number of probabilities\n",
        "> ",
        "sample(outcomes, size = 100, replace = TRUE, prob = c(0.01, 0.8,0.1))",
        "Error in sample.int(length(x), size, replace, prob) : \n  incorrect number of probabilities\n",
        "> ",
        "sample(outcomes, size = 100, replace = TRUE, prob = c(0.01, 0.8))",
        "  [1] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"heads\" \"tails\" \"tails\" \"tails\"\n [10] \"tails\" \"tails\" \"heads\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [19] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [28] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [37] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [46] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [55] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"",
        " \"tails\" \"tails\" \"tails\" \"tails\"\n [64] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [73] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [82] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [91] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n[100] \"tails\"\n",
        "> ",
        "outcomes <- c(\"H\", \"M\")",
        "> ",
        "sim_basket <- sample(outcomes, size = 1, replace = TRUE)",
        "> ",
        "outcomes <- c(\"H\", \"M\")",
        "> ",
        "sim_basket <- sample(outcomes, size = 1, replace = TRUE)",
        "> ",
        "sim_basket",
        "[1] \"M\"\n",
        "> ",
        "kobe_streak <- calc_streak(kobe$basket)",
        "> ",
        "mean(kobe_streak)",
        "[1] 0.7631579\n",
        "> ",
        "",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sim_unfair_coin",
        "  [1] \"tails\" \"heads\" \"tails\" \"tails\" \"heads\" \"tails\" \"heads\" \"tails\" \"tails\"\n [10] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"heads\" \"tails\"\n [19] \"tails\" \"tails\" \"tails\" \"heads\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [28] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [37] \"tails\" \"heads\" \"heads\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [46] \"heads\" \"tails\" \"tails\" \"tails\" \"tails\" \"heads\" \"tails\" \"heads\" \"heads\"\n [55] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"",
        " \"tails\" \"heads\" \"tails\" \"heads\"\n [64] \"heads\" \"tails\" \"tails\" \"tails\" \"tails\" \"heads\" \"tails\" \"tails\" \"tails\"\n [73] \"tails\" \"heads\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"heads\"\n [82] \"heads\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n [91] \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\" \"tails\"\n[100] \"tails\"\n",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin =\"heads\")",
        "Error in sum(sim_unfair_coin = \"heads\") : \n  invalid 'type' (character) of argument\n",
        "> ",
        "sum(sim_unfair_coin ==\"heads\")",
        "[1] 18\n",
        "> ",
        "sum(sim_unfair_coin ==\"tails\")",
        "[1] 82\n",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin ==\"tails\")",
        "[1] 81\n",
        "> ",
        "",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin ==\"heads\")",
        "[1] 15\n",
        "> ",
        "",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin ==\"heads\")",
        "[1] 18\n",
        "> ",
        "",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin ==\"heads\")",
        "[1] 24\n",
        "> ",
        "",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin ==\"heads\")",
        "[1] 26\n",
        "> ",
        "",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin ==\"heads\")",
        "[1] 23\n",
        "> ",
        "",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin ==\"heads\")",
        "[1] 18\n",
        "> ",
        "",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin ==\"heads\")",
        "[1] 16\n",
        "> ",
        "",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin ==\"heads\")",
        "[1] 21\n",
        "> ",
        "",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin ==\"heads\")",
        "[1] 15\n",
        "> ",
        "",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin ==\"heads\")",
        "[1] 23\n",
        "> ",
        "",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin ==\"heads\")",
        "[1] 19\n",
        "> ",
        "",
        "> ",
        "outcomes <- c(\"heads\", \"tails\")",
        "> ",
        "",
        "> ",
        "sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))",
        "> ",
        "",
        "> ",
        "sum(sim_unfair_coin ==\"heads\")",
        "[1] 18\n",
        "> ",
        "",
        "> ",
        "shooting_outcomes <- c(\"H\",\"M\")",
        "> ",
        "",
        "> ",
        "sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,55))",
        "> ",
        "",
        "> ",
        "head(sim_basket)",
        "[1] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n",
        "> ",
        "",
        "> ",
        "shooting_outcomes <- c(\"H\",\"M\")",
        "> ",
        "",
        "> ",
        "sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,55))",
        "> ",
        "",
        "> ",
        "sim_basket",
        "  [1] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n [19] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"H\" \"M\" \"M\" \"M\" \"M\"\n [37] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n [55] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"H\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n [73] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n [91] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n[109] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"",
        " \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n[127] \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\"\n",
        "> ",
        "",
        "> ",
        "sum(sim_basket =\"H\")",
        "Error in sum(sim_basket = \"H\") : invalid 'type' (character) of argument\n",
        "> ",
        "sum(sim_basket ==\"H\")",
        "[1] 2\n",
        "> ",
        "sum(sim_basket ==\"H\")",
        "[1] 2\n",
        "> ",
        "shooting_outcomes <- c(\"H\",\"M\")",
        "> ",
        "",
        "> ",
        "sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))",
        "> ",
        "",
        "> ",
        "sum(sim_basket ==\"H\")",
        "[1] 56\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "shooting_outcomes <- c(\"H\",\"M\")",
        "> ",
        "",
        "> ",
        "sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))",
        "> ",
        "",
        "> ",
        "sum(sim_basket ==\"H\")",
        "[1] 57\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "shooting_outcomes <- c(\"H\",\"M\")",
        "> ",
        "",
        "> ",
        "sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))",
        "> ",
        "",
        "> ",
        "sum(sim_basket ==\"H\")",
        "[1] 70\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "shooting_outcomes <- c(\"H\",\"M\")",
        "> ",
        "",
        "> ",
        "sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))",
        "> ",
        "",
        "> ",
        "sum(sim_basket ==\"H\")",
        "[1] 64\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "shooting_outcomes <- c(\"H\",\"M\")",
        "> ",
        "",
        "> ",
        "sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))",
        "> ",
        "",
        "> ",
        "sum(sim_basket ==\"H\")",
        "[1] 58\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "shooting_outcomes <- c(\"H\",\"M\")",
        "> ",
        "",
        "> ",
        "sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))",
        "> ",
        "",
        "> ",
        "sum(sim_basket ==\"H\")",
        "[1] 57\n",
        "> ",
        "",
        "> ",
        "shooting_outcomes <- c(\"H\",\"M\")",
        "> ",
        "",
        "> ",
        "sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))",
        "> ",
        "",
        "> ",
        "sum(sim_basket ==\"H\")",
        "[1] 61\n",
        "> ",
        "",
        "> ",
        "shooting_outcomes <- c(\"H\",\"M\")",
        "> ",
        "",
        "> ",
        "sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))",
        "> ",
        "",
        "> ",
        "sum(sim_basket ==\"H\")",
        "[1] 62\n",
        "> ",
        "",
        "> ",
        "kobe$basket",
        "  [1] \"H\" \"M\" \"M\" \"H\" \"H\" \"M\" \"M\" \"M\" \"M\" \"H\" \"H\" \"H\" \"M\" \"H\" \"H\" \"M\" \"M\" \"H\"\n [19] \"H\" \"H\" \"M\" \"M\" \"H\" \"M\" \"H\" \"H\" \"H\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"H\" \"M\" \"H\"\n [37] \"M\" \"M\" \"H\" \"H\" \"H\" \"H\" \"M\" \"H\" \"M\" \"M\" \"H\" \"M\" \"M\" \"H\" \"M\" \"M\" \"H\" \"M\"\n [55] \"H\" \"H\" \"M\" \"M\" \"H\" \"M\" \"H\" \"H\" \"M\" \"H\" \"M\" \"M\" \"M\" \"H\" \"M\" \"M\" \"M\" \"M\"\n [73] \"H\" \"M\" \"H\" \"M\" \"M\" \"H\" \"M\" \"M\" \"H\" \"H\" \"M\" \"M\" \"M\" \"M\" \"H\" \"H\" \"H\" \"M\"\n [91] \"M\" \"H\" \"M\" \"M\" \"H\" \"M\" \"H\" \"H\" \"M\" \"H\" \"M\" \"M\" \"H\" \"M\" \"M\" \"M\" \"H\" \"M\"\n[109] \"H\" \"H\" \"H\" \"M\" \"H\" \"H\" \"H\" \"M\" \"H\" \"M\"",
        " \"H\" \"M\" \"M\" \"M\" \"M\" \"M\" \"M\" \"H\"\n[127] \"M\" \"H\" \"M\" \"M\" \"M\" \"M\" \"H\"\n",
        "> ",
        "sim_basket",
        "  [1] \"M\" \"M\" \"M\" \"H\" \"M\" \"H\" \"H\" \"M\" \"M\" \"M\" \"M\" \"M\" \"H\" \"H\" \"H\" \"M\" \"H\" \"M\"\n [19] \"M\" \"M\" \"M\" \"M\" \"H\" \"M\" \"H\" \"M\" \"H\" \"H\" \"H\" \"H\" \"M\" \"H\" \"M\" \"M\" \"M\" \"H\"\n [37] \"H\" \"H\" \"M\" \"M\" \"H\" \"M\" \"H\" \"H\" \"M\" \"H\" \"H\" \"M\" \"H\" \"M\" \"M\" \"H\" \"H\" \"M\"\n [55] \"H\" \"M\" \"M\" \"H\" \"H\" \"M\" \"M\" \"M\" \"H\" \"M\" \"M\" \"M\" \"M\" \"M\" \"H\" \"H\" \"H\" \"M\"\n [73] \"M\" \"H\" \"M\" \"M\" \"M\" \"M\" \"H\" \"M\" \"M\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"H\" \"M\" \"H\"\n [91] \"H\" \"H\" \"M\" \"M\" \"H\" \"H\" \"M\" \"H\" \"H\" \"M\" \"M\" \"M\" \"M\" \"M\" \"H\" \"M\" \"H\" \"H\"\n[109] \"H\" \"H\" \"M\" \"M\" \"M\" \"H\" \"H\" \"H\" \"M\" \"H\"",
        " \"M\" \"M\" \"M\" \"H\" \"H\" \"H\" \"M\" \"M\"\n[127] \"M\" \"M\" \"H\" \"H\" \"M\" \"M\" \"M\"\n",
        "> ",
        "sim_streak <- calc_streak(sim_basket)",
        "> ",
        "sim_streak",
        " [1] 0 0 0 1 2 0 0 0 0 3 1 0 0 0 0 1 1 4 1 0 0 3 0 1 2 2 1 0 2 1 0 2 0 0 1 0 0\n[38] 0 0 3 0 1 0 0 0 1 0 7 3 0 2 2 0 0 0 0 1 4 0 0 3 1 0 0 3 0 0 0 2 0 0 0\n",
        "> ",
        "barplot(sim_streak)",
        "> ",
        "barplot(table(sim_streak))",
        "> ",
        "kobe_streak <- calc_streak(kobe$basket)",
        "> ",
        "hist(kobe_streak)",
        "> ",
        "",
        "> ",
        "kobe_streak <- calc_streak(kobe$basket)",
        "> ",
        "barplot(table(kobe_streak))",
        "> ",
        "mean(kobe_streak)",
        "[1] 0.7631579\n",
        "> ",
        "",
        "> ",
        "barplot(table(sim_streak))",
        "> ",
        "mean(sim_streak)",
        "[1] 0.8611111\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))",
        "> ",
        "",
        "> ",
        "sum(sim_basket ==\"H\")",
        "[1] 67\n",
        "> ",
        "",
        "> ",
        "sim_streak <- calc_streak(sim_basket)",
        "> ",
        "barplot(table(sim_streak))",
        "> ",
        "mean(sim_streak)",
        "[1] 1\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "sim_basket <-sample(shooting_outcomes,size = 133,replace = TRUE,prob=c(0.45,0.55))",
        "> ",
        "",
        "> ",
        "sum(sim_basket ==\"H\")",
        "[1] 48\n",
        "> ",
        "",
        "> ",
        "sim_streak <- calc_streak(sim_basket)",
        "> ",
        "barplot(table(sim_streak))",
        "> ",
        "mean(sim_streak)",
        "[1] 0.5581395\n",
        "> ",
        "",
        "> ",
        "barplot(table(sim_streak))",
        "> ",
        "barplot(table(sim_streak))",
        "> ",
        "barplot(table(kobe_streak))",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "barplot(table(kobe_streak))",
        "> ",
        "",
        "> ",
        "barplot(table(sim_streak))",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "library(\"ggplot2\")",
        "> ",
        "library(\"reshape2\")",
        "> ",
        "comparision <- data.frame(table(kobe_streak),table(sim_streak))",
        "> ",
        "comparision",
        "  kobe_streak Freq sim_streak Freq.1\n1           0   39          0     56\n2           1   24          1     19\n3           2    6          2      8\n4           3    6          4      2\n5           4    1          5      1\n",
        "> ",
        "comparision.df <- melt(comparison, id=c(\"comparison$sim_streak\"))",
        "Error in melt(comparison, id = c(\"comparison$sim_streak\")) : \n  object 'comparison' not found\n",
        "> ",
        "comparision.df <- melt(comparison, id=c(\"comparision$sim_streak\"))",
        "Error in melt(comparison, id = c(\"comparision$sim_streak\")) : \n  object 'comparison' not found\n",
        "> ",
        "comparision.df <- melt(comparison, id=c(comparision$sim_streak))",
        "Error in melt(comparison, id = c(comparision$sim_streak)) : \n  object 'comparison' not found\n",
        "> ",
        "comparision.df <- melt(comparision, id=c(comparision$sim_streak))",
        "Error: id variables not found in data: NA\n",
        "> ",
        "comparision.df <- melt(comparision, id=c(\"comparision$sim_streak\"\"))",
        "+ ",
        "comparision.df <- melt(comparision, id=c(\"comparision$sim_streak\"))",
        "Error: unexpected string constant in:\n\"comparision.df <- melt(comparision, id=c(\"comparision$sim_streak\"\"))\ncomparision.df <- melt(comparision, id=c(\"\"\n",
        "> ",
        "comparision.df <- melt(comparision, id=c(\"comparision$sim_streak\"))",
        "Error: id variables not found in data: comparision$sim_streak\n",
        "> ",
        "comparision.df <- melt(comparision, id=c(\"sim_streak\"))",
        "Warning message:\n",
        "attributes are not identical across measure variables; they will be dropped \n",
        "> ",
        "comparision.df",
        "   sim_streak    variable value\n1           0 kobe_streak     0\n2           1 kobe_streak     1\n3           2 kobe_streak     2\n4           4 kobe_streak     3\n5           5 kobe_streak     4\n6           0        Freq    39\n7           1        Freq    24\n8           2        Freq     6\n9           4        Freq     6\n10          5        Freq     1\n11          0      Freq.1    56\n12          1      Freq.1    19\n13          2      Freq.1     8\n14          4      Freq.1     2\n15          5      Freq.1     1\n",
        "> ",
        "comparision <- data.frame(table(kobe_streak),table(sim_streak))",
        "> ",
        "comparision",
        "  kobe_streak Freq sim_streak Freq.1\n1           0   39          0     56\n2           1   24          1     19\n3           2    6          2      8\n4           3    6          4      2\n5           4    1          5      1\n",
        "> ",
        "barplot(table(kobe_streak),table(sim_streak))",
        "> ",
        "barplot(table(kobe_streak))",
        "> ",
        "",
        "> ",
        "barplot(table(sim_streak))",
        "> ",
        "table(sim_streak)",
        "sim_streak\n 0  1  2  4  5 \n56 19  8  2  1 \n",
        "> ",
        "  y <- rep(0,length(x))",
        "> ",
        "",
        "> ",
        "sample(flip-coin,size=10,replace=TRUE)",
        "Error in sample(flip - coin, size = 10, replace = TRUE) : \n  object 'flip' not found\n",
        "> ",
        "sample(flip-coin, size=10,replace=TRUE)",
        "Error in sample(flip - coin, size = 10, replace = TRUE) : \n  object 'flip' not found\n",
        "> ",
        "flip_coin <- c(\"H\",\"T\")",
        "> ",
        "",
        "> ",
        "sample(flip_coin, size=10,replace=TRUE)",
        " [1] \"H\" \"H\" \"T\" \"H\" \"T\" \"H\" \"H\" \"H\" \"T\" \"H\"\n",
        "> ",
        "flip_coin <- c(\"H\",\"T\")",
        "> ",
        "",
        "> ",
        "sample(flip_coin, size=10,replace=TRUE)",
        " [1] \"T\" \"H\" \"T\" \"T\" \"H\" \"H\" \"H\" \"T\" \"H\" \"T\"\n",
        "> ",
        "sample(flip_coin, size=10,rep=T)",
        " [1] \"T\" \"H\" \"T\" \"T\" \"T\" \"T\" \"T\" \"H\" \"T\" \"H\"\n",
        "> ",
        "sample(flip_coin, size=10,rep=F)",
        "Error in sample.int(length(x), size, replace, prob) : \n  cannot take a sample larger than the population when 'replace = FALSE'\n",
        "> ",
        "sample(0:1, size=10,replace=TRUE)",
        " [1] 0 0 1 1 1 0 0 0 1 0\n",
        "> ",
        "0.5^10",
        "[1] 0.0009765625\n",
        "> ",
        "1-0.0009765625",
        "[1] 0.9990234\n",
        "> ",
        "sample(2:12,1,rep=F)",
        "[1] 3\n",
        "> ",
        "sample(2:12,1,rep=F)",
        "[1] 5\n",
        "> ",
        "```",
        "Error: attempt to use zero-length variable name\n",
        "> ",
        "sample(2:12,1,rep=T)",
        "[1] 3\n",
        "> ",
        "dice <- c(2:12)",
        "> ",
        "c(2:12)",
        " [1]  2  3  4  5  6  7  8  9 10 11 12\n",
        "> ",
        "4/36",
        "[1] 0.1111111\n",
        "> ",
        "true <- c(1,2,3,4,5,6,5,4,3,2,1)/36",
        "> ",
        "true",
        " [1] 0.02777778 0.05555556 0.08333333 0.11111111 0.13888889 0.16666667\n [7] 0.13888889 0.11111111 0.08333333 0.05555556 0.02777778\n",
        "> ",
        "1/6",
        "[1] 0.1666667\n",
        "> ",
        "c(1,2,3,4,5,6,5,4,3,2,1)",
        " [1] 1 2 3 4 5 6 5 4 3 2 1\n",
        "> ",
        "c(1)/2",
        "[1] 0.5\n",
        "> ",
        "c(1,1)/2",
        "[1] 0.5 0.5\n",
        "> ",
        "35+23+11",
        "[1] 69\n",
        "> ",
        "100-35+23+11",
        "[1] 99\n",
        "> ",
        "100-(35+23+11)",
        "[1] 31\n",
        "> ",
        "install.packages(\"venndiagram\")",
        "Warning in install.packages :\n  package ‘venndiagram’ is not available (for R version 3.3.1)\nWarning in install.packages :\n  Perhaps you meant ‘VennDiagram’ ?\n",
        "> ",
        "Yes",
        "Error: object 'Yes' not found\n",
        "> ",
        "install.packages(\"VennDiagram\")",
        "also installing the dependencies ‘lambda.r’, ‘futile.options’, ‘futile.logger’\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.3/lambda.r_1.1.9.zip'\n",
        "Content type 'application/zip'",
        " length 73386 bytes (71 KB)\n",
        "downloaded 71 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.3/futile.options_1.0.0.zip'\n",
        "Content type 'application/zip'",
        " length 16710 bytes (16 KB)\n",
        "downloaded 16 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.3/futile.logger_1.4.3.zip'\n",
        "Content type 'application/zip'",
        " length 90898 bytes (88 KB)\n",
        "downloaded 88 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/3.3/VennDiagram_1.6.17.zip'\n",
        "Content type 'application/zip'",
        " length 142189 bytes (138 KB)\n",
        "downloaded 138 KB\n\n",
        "package ‘lambda.r’ successfully unpacked and MD5 sums checked\npackage ‘futile.options’ successfully unpacked and MD5 sums checked\npackage ‘futile.logger’ successfully unpacked and MD5 sums checked\npackage ‘VennDiagram’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\paperspace\\AppData\\Local\\Temp\\Rtmp8K02E0\\downloaded_packages\n",
        "> ",
        "library(\"VennDiagram\")",
        "Loading required package: grid\n",
        "Loading required package: futile.logger\n",
        "> ",
        "install.packages(\"grid\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"futile.logger\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"grid\")",
        "Warning in install.packages :\n  package ‘grid’ is not available (for R version 3.3.1)\nWarning in install.packages :\n  package ‘grid’ is a base package, and should not be updated\n",
        "> ",
        "install.packages(\"futile.logger\")",
        "Warning in install.packages :\n  package ‘futile.logger’ is in use and will not be installed\n",
        "> ",
        "install.packages(\"grid\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"grid\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"futile.logger\")",
        "Error in install.packages : Updating loaded packages\n\nRestarting R session...\n\n\nRestarting R session...\n\n"
    ],
    "type" : [
        2,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2
    ]
}