{
    "collab_server" : "",
    "contents" : "---\ntitle: \"The normal distribution\"\noutput:\n  html_document:\n    theme: cerulean\n    highlight: pygments\n    css: ./lab.css\n---\n\nIn this lab we'll investigate the probability distribution that is most central\nto statistics: the normal distribution.  If we are confident that our data are \nnearly normal, that opens the door to many powerful statistical methods.  Here \nwe'll use the graphical tools of R to assess the normality of our data and also \nlearn how to generate random numbers from a normal distribution.\n\n## The Data\n\nThis week we'll be working with measurements of body dimensions.  This data set \ncontains measurements from 247 men and 260 women, most of whom were considered \nhealthy young adults.\n\n```{r load-data, eval=FALSE}\nload(\"more/bdims.RData\")\n```\n\nLet's take a quick peek at the first few rows of the data.\n\n```{r head-data, eval=FALSE}\nhead(bdims)\n```\n\nYou'll see that for every observation we have 25 measurements, many of which are\neither diameters or girths.  A key to the variable names can be found at \n[http://www.openintro.org/stat/data/bdims.php](http://www.openintro.org/stat/data/bdims.php),\nbut we'll be focusing on just three columns to get started: weight in kg (`wgt`), \nheight in cm (`hgt`), and `sex` (`1` indicates male, `0` indicates female).\n\nSince males and females tend to have different body dimensions, it will be \nuseful to create two additional data sets: one with only men and another with \nonly women.\n\n```{r male-female, eval=FALSE}\nmdims <- subset(bdims, sex == 1)\nfdims <- subset(bdims, sex == 0)\n```\n\n1.  Make a histogram of men's heights and a histogram of women's heights.  How \n    would you compare the various aspects of the two distributions?\n\n## The normal distribution\n\nIn your description of the distributions, did you use words like *bell-shaped* \nor *normal*?  It's tempting to say so when faced with a unimodal symmetric \ndistribution.\n\nTo see how accurate that description is, we can plot a normal distribution curve \non top of a histogram to see how closely the data follow a normal distribution. \nThis normal curve should have the same mean and standard deviation as the data. \nWe'll be working with women's heights, so let's store them as a separate object \nand then calculate some statistics that will be referenced later. \n\n```{r female-hgt-mean-sd, eval=FALSE}\nfhgtmean <- mean(fdims$hgt)\nfhgtsd   <- sd(fdims$hgt)\n```\n\nNext we make a density histogram to use as the backdrop and use the `lines` \nfunction to overlay a normal probability curve. The difference between a \nfrequency histogram and a density histogram is that while in a frequency \nhistogram the *heights* of the bars add up to the total number of observations, \nin a density histogram the *areas* of the bars add up to 1. The area of each bar \ncan be calculated as simply the height *times* the width of the bar. Using a \ndensity histogram allows us to properly overlay a normal distribution curve over \nthe histogram since the curve is a normal probability density function.\nFrequency and density histograms both display the same exact shape; they only \ndiffer in their y-axis. You can verify this by comparing the frequency histogram \nyou constructed earlier and the density histogram created by the commands below.\n\n```{r hist-height, eval=FALSE}\nhist(fdims$hgt, probability = TRUE)\nx <- 140:190\ny <- dnorm(x = x, mean = fhgtmean, sd = fhgtsd)\nlines(x = x, y = y, col = \"blue\")\n```\n\nAfter plotting the density histogram with the first command, we create the x- \nand y-coordinates for the normal curve.  We chose the `x` range as 140 to 190 in \norder to span the entire range of `fheight`.  To create `y`, we use `dnorm` to \ncalculate the density of each of those x-values in a distribution that is normal\nwith mean `fhgtmean` and standard deviation `fhgtsd`.  The final command draws a\ncurve on the existing plot (the density histogram) by connecting each of the \npoints specified by `x` and `y`. The argument `col` simply sets the color for \nthe line to be drawn. If we left it out, the line would be drawn in black.\n\nThe top of the curve is cut off because the limits of the x- and y-axes are set \nto best fit the histogram.  To adjust the y-axis you can add a third argument to\nthe histogram function: `ylim = c(0, 0.06)`.\n\n2.  Based on the this plot, does it appear that the data follow a nearly normal \n    distribution?\n\n\n## Evaluating the normal distribution\n\nEyeballing the shape of the histogram is one way to determine if the data appear\nto be nearly normally distributed, but it can be frustrating to decide just how \nclose the histogram is to the curve. An alternative approach involves \nconstructing a normal probability plot, also called a normal Q-Q plot for \n\"quantile-quantile\".\n\n```{r qq, eval=FALSE}\nqqnorm(fdims$hgt)\nqqline(fdims$hgt)\n```\n\nA data set that is nearly normal will result in a probability plot where the \npoints closely follow the line.  Any deviations from normality leads to \ndeviations of these points from the line.  The plot for female heights shows \npoints that tend to follow the line but with some errant points towards the \ntails.  We're left with the same problem that we encountered with the histogram \nabove: how close is close enough?\n\nA useful way to address this question is to rephrase it as: what do probability \nplots look like for data that I *know* came from a normal distribution?  We can \nanswer this by simulating data from a normal distribution using `rnorm`.\n\n```{r sim-norm, eval=FALSE}\nsim_norm <- rnorm(n = length(fdims$hgt), mean = fhgtmean, sd = fhgtsd)\n```\n\nThe first argument indicates how many numbers you'd like to generate, which we \nspecify to be the same number of heights in the `fdims` data set using the \n`length` function.  The last two arguments determine the mean and standard \ndeviation of the normal distribution from which the simulated sample will be \ngenerated.  We can take a look at the shape of our simulated data set, `sim_norm`, \nas well as its normal probability plot.\n\n3.  Make a normal probability plot of `sim_norm`.  Do all of the points fall on \n    the line?  How does this plot compare to the probability plot for the real \n    data?\n\nEven better than comparing the original plot to a single plot generated from a \nnormal distribution is to compare it to many more plots using the following \nfunction. It may be helpful to click the zoom button in the plot window.\n\n```{r qqnormsim, eval=FALSE}\nqqnormsim(fdims$hgt)\n```\n\n4.  Does the normal probability plot for `fdims$hgt` look similar to the plots \n    created for the simulated data?  That is, do plots provide evidence that the\n    female heights are nearly normal?\n\n5.  Using the same technique, determine whether or not female weights appear to \n    come from a normal distribution.\n\n## Normal probabilities\n\nOkay, so now you have a slew of tools to judge whether or not a variable is \nnormally distributed.  Why should we care?\n\nIt turns out that statisticians know a lot about the normal distribution.  Once \nwe decide that a random variable is approximately normal, we can answer all \nsorts of questions about that variable related to probability.  Take, for \nexample, the question of, \"What is the probability that a randomly chosen young \nadult female is taller than 6 feet (about 182 cm)?\" (The study that published\nthis data set is clear to point out that the sample was not random and therefore \ninference to a general population is not suggested.  We do so here only as an\nexercise.)\n\nIf we assume that female heights are normally distributed (a very close \napproximation is also okay), we can find this probability by calculating a Z \nscore and consulting a Z table (also called a normal probability table).  In R, \nthis is done in one step with the function `pnorm`.\n\n```{r pnorm, eval=FALSE}\n1 - pnorm(q = 182, mean = fhgtmean, sd = fhgtsd)\n```\n\nNote that the function `pnorm` gives the area under the normal curve below a \ngiven value, `q`, with a given mean and standard deviation.  Since we're \ninterested in the probability that someone is taller than 182 cm, we have to \ntake one minus that probability.\n\nAssuming a normal distribution has allowed us to calculate a theoretical \nprobability.  If we want to calculate the probability empirically, we simply \nneed to determine how many observations fall above 182 then divide this number \nby the total sample size.\n\n```{r probability, eval=FALSE}\nsum(fdims$hgt > 182) / length(fdims$hgt)\n```\n\nAlthough the probabilities are not exactly the same, they are reasonably close. \nThe closer that your distribution is to being normal, the more accurate the \ntheoretical probabilities will be.\n\n6.  Write out two probability questions that you would like to answer; one \n    regarding female heights and one regarding female weights.  Calculate the \n    those probabilities using both the theoretical normal distribution as well \n    as the empirical distribution (four probabilities in all).  Which variable,\n    height or weight, had a closer agreement between the two methods?\n\n* * *\n\n## On Your Own\n\n-   Now let's consider some of the other variables in the body dimensions data \n    set.  Using the figures at the end of the exercises, match the histogram to \n    its normal probability plot.  All of the variables have been standardized \n    (first subtract the mean, then divide by the standard deviation), so the \n    units won't be of any help.  If you are uncertain based on these figures, \n    generate the plots in R to check.\n\n    **a.** The histogram for female biiliac (pelvic) diameter (`bii.di`) belongs\n    to normal probability plot letter ____.\n\n    **b.** The histogram for female elbow diameter (`elb.di`) belongs to normal \n    probability plot letter ____.\n\n    **c.** The histogram for general age (`age`) belongs to normal probability \n    plot letter ____.\n\n    **d.** The histogram for female chest depth (`che.de`) belongs to normal \n    probability plot letter ____.\n\n-   Note that normal probability plots C and D have a slight stepwise pattern.  \n    Why do you think this is the case?\n\n-   As you can see, normal probability plots can be used both to assess \n    normality and visualize skewness.  Make a normal probability plot for female \n    knee diameter (`kne.di`).  Based on this normal probability plot, is this \n    variable left skewed, symmetric, or right skewed?  Use a histogram to confirm \n    your findings.\n\n\n![histQQmatch](more/histQQmatch.png)\n\n<div id=\"license\">\nThis is a product of OpenIntro that is released under a \n[Creative Commons Attribution-ShareAlike 3.0 Unported](http://creativecommons.org/licenses/by-sa/3.0). \nThis lab was adapted for OpenIntro by Andrew Bray and Mine &Ccedil;etinkaya-Rundel\nfrom a lab written by Mark Hansen of UCLA Statistics.\n</div>\n",
    "created" : 1474734964337.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1196634901",
    "id" : "BF94207E",
    "lastKnownWriteTime" : 1474734539,
    "last_content_update" : 1474734539,
    "path" : "C:/CUNY/Courses/CUNY-repository/606/Week3-09_Sep2016/Lab3/paperspace-normal_distribution.Rmd",
    "project_path" : "Lab3/paperspace-normal_distribution.Rmd",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}